"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/_components/dropzone/api/useFileUploadMutation.ts":
/*!***************************************************************!*\
  !*** ./app/_components/dropzone/api/useFileUploadMutation.ts ***!
  \***************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useFileUploadMutation: function() { return /* binding */ useFileUploadMutation; }\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useMutation.js\");\n/* harmony import */ var _app_interceptor_axiosInstance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/app/interceptor/axiosInstance */ \"(app-pages-browser)/./app/interceptor/axiosInstance.ts\");\n\n\nconst uploadFile = async (files)=>{\n    const formData = new FormData();\n    files.forEach((file)=>{\n        formData.append(\"files\", file);\n    });\n    const response = await _app_interceptor_axiosInstance__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/upload/file\", formData, {\n        headers: {\n            \"Content-Type\": \"multipart/form-data\"\n        }\n    });\n    if (!response.data) {\n        throw new Error(\"Error uploading file\");\n    }\n    return response.data;\n};\nconst useFileUploadMutation = ()=>{\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useMutation)({\n        onError: (error, files, rollback)=>{\n            console.log(\"Error:\", error);\n        },\n        mutationFn: uploadFile\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9fY29tcG9uZW50cy9kcm9wem9uZS9hcGkvdXNlRmlsZVVwbG9hZE11dGF0aW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUUrQjtBQUM2QjtBQU01RCxNQUFNRSxhQUFhLE9BQU9DO0lBQ3hCLE1BQU1DLFdBQVcsSUFBSUM7SUFDckJGLE1BQU1HLE9BQU8sQ0FBQyxDQUFDQztRQUNiSCxTQUFTSSxNQUFNLENBQUMsU0FBU0Q7SUFDM0I7SUFFQSxNQUFNRSxXQUFXLE1BQU1SLHNFQUFhQSxDQUFDUyxJQUFJLENBQUMsZ0JBQWdCTixVQUFVO1FBQ2xFTyxTQUFTO1lBQ1AsZ0JBQWdCO1FBQ2xCO0lBQ0Y7SUFFQSxJQUFJLENBQUNGLFNBQVNHLElBQUksRUFBRTtRQUNsQixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFFQSxPQUFPSixTQUFTRyxJQUFJO0FBQ3RCO0FBRU8sTUFBTUUsd0JBQXdCO0lBQ25DLE9BQU9kLGtFQUFXQSxDQUFDO1FBRWpCZSxTQUFTLENBQUNDLE9BQU9iLE9BQU9jO1lBQ3RCQyxRQUFRQyxHQUFHLENBQUMsVUFBVUg7UUFDeEI7UUFFQUksWUFBWWxCO0lBQ2Q7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9fY29tcG9uZW50cy9kcm9wem9uZS9hcGkvdXNlRmlsZVVwbG9hZE11dGF0aW9uLnRzPzQwMTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICB1c2VNdXRhdGlvbixcclxufSBmcm9tIFwiQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5XCI7XHJcbmltcG9ydCBheGlvc0luc3RhbmNlIGZyb20gXCJAL2FwcC9pbnRlcmNlcHRvci9heGlvc0luc3RhbmNlXCI7XHJcbmltcG9ydCB1c2VTaW5nbGVQYWNrYWdlU3RvcmUgZnJvbSBcIkAvYXBwL19zdG9yZXMvdXNlU2luZ2xlUGFja2FnZVN0b3JlXCI7XHJcbmV4cG9ydCB0eXBlIEZpbGVVcGxvYWREVE8gPSB7XHJcbiAgZmlsZXM6IEZpbGVbXTtcclxufTtcclxuXHJcbmNvbnN0IHVwbG9hZEZpbGUgPSBhc3luYyAoZmlsZXM6IEZpbGVbXSkgPT4ge1xyXG4gIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XHJcbiAgZmlsZXMuZm9yRWFjaCgoZmlsZSkgPT4ge1xyXG4gICAgZm9ybURhdGEuYXBwZW5kKFwiZmlsZXNcIiwgZmlsZSk7XHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3NJbnN0YW5jZS5wb3N0KFwiL3VwbG9hZC9maWxlXCIsIGZvcm1EYXRhLCB7XHJcbiAgICBoZWFkZXJzOiB7XHJcbiAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwibXVsdGlwYXJ0L2Zvcm0tZGF0YVwiLFxyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbiAgaWYgKCFyZXNwb25zZS5kYXRhKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciB1cGxvYWRpbmcgZmlsZVwiKTtcclxuICB9XHJcblxyXG4gIHJldHVybiByZXNwb25zZS5kYXRhO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZUZpbGVVcGxvYWRNdXRhdGlvbiA9ICgpID0+IHtcclxuICByZXR1cm4gdXNlTXV0YXRpb24oe1xyXG4gXHJcbiAgICBvbkVycm9yOiAoZXJyb3IsIGZpbGVzLCByb2xsYmFjaykgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIkVycm9yOlwiLCBlcnJvcik7XHJcbiAgICB9LFxyXG5cclxuICAgIG11dGF0aW9uRm46IHVwbG9hZEZpbGUsXHJcbiAgfSk7XHJcbn07XHJcbiJdLCJuYW1lcyI6WyJ1c2VNdXRhdGlvbiIsImF4aW9zSW5zdGFuY2UiLCJ1cGxvYWRGaWxlIiwiZmlsZXMiLCJmb3JtRGF0YSIsIkZvcm1EYXRhIiwiZm9yRWFjaCIsImZpbGUiLCJhcHBlbmQiLCJyZXNwb25zZSIsInBvc3QiLCJoZWFkZXJzIiwiZGF0YSIsIkVycm9yIiwidXNlRmlsZVVwbG9hZE11dGF0aW9uIiwib25FcnJvciIsImVycm9yIiwicm9sbGJhY2siLCJjb25zb2xlIiwibG9nIiwibXV0YXRpb25GbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/_components/dropzone/api/useFileUploadMutation.ts\n"));

/***/ })

});