"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/_components/dropzone/api/useFileUploadMutation.ts":
/*!***************************************************************!*\
  !*** ./app/_components/dropzone/api/useFileUploadMutation.ts ***!
  \***************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useFileUploadMutation: function() { return /* binding */ useFileUploadMutation; }\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useMutation.js\");\n/* harmony import */ var _app_interceptor_axiosInstance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/app/interceptor/axiosInstance */ \"(app-pages-browser)/./app/interceptor/axiosInstance.ts\");\n/* harmony import */ var _app_stores_useSinglePackageStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/app/_stores/useSinglePackageStore */ \"(app-pages-browser)/./app/_stores/useSinglePackageStore.ts\");\n\n\n\nconst uploadFile = async (files)=>{\n    const formData = new FormData();\n    files.forEach((file)=>{\n        formData.append(\"files\", file);\n    });\n    const response = await _app_interceptor_axiosInstance__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/upload/file\", formData, {\n        headers: {\n            \"Content-Type\": \"multipart/form-data\"\n        }\n    });\n    if (!response.data) {\n        throw new Error(\"Error uploading file\");\n    }\n    return response.data;\n};\nconst useFileUploadMutation = ()=>{\n    const setSinglePackage = (0,_app_stores_useSinglePackageStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((state)=>state.setSinglePackage);\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useMutation)({\n        onError: (error, files, rollback)=>{\n            console.log(\"Error:\", error);\n        },\n        onSettled: (data, error, files)=>{\n            if (!error) {\n                const packageData = data.package;\n                setSinglePackage(packageData);\n            }\n        },\n        mutationFn: uploadFile\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9fY29tcG9uZW50cy9kcm9wem9uZS9hcGkvdXNlRmlsZVVwbG9hZE11dGF0aW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFK0I7QUFDNkI7QUFDWTtBQU14RSxNQUFNRyxhQUFhLE9BQU9DO0lBQ3hCLE1BQU1DLFdBQVcsSUFBSUM7SUFDckJGLE1BQU1HLE9BQU8sQ0FBQyxDQUFDQztRQUNiSCxTQUFTSSxNQUFNLENBQUMsU0FBU0Q7SUFDM0I7SUFFQSxNQUFNRSxXQUFXLE1BQU1ULHNFQUFhQSxDQUFDVSxJQUFJLENBQUMsZ0JBQWdCTixVQUFVO1FBQ2xFTyxTQUFTO1lBQ1AsZ0JBQWdCO1FBQ2xCO0lBQ0Y7SUFFQSxJQUFJLENBQUNGLFNBQVNHLElBQUksRUFBRTtRQUNsQixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFFQSxPQUFPSixTQUFTRyxJQUFJO0FBQ3RCO0FBRU8sTUFBTUUsd0JBQXdCO0lBQ25DLE1BQU1DLG1CQUFtQmQsNkVBQXFCQSxDQUM1QyxDQUFDZSxRQUFVQSxNQUFNRCxnQkFBZ0I7SUFJbkMsT0FBT2hCLGtFQUFXQSxDQUFDO1FBRWpCa0IsU0FBUyxDQUFDQyxPQUFPZixPQUFPZ0I7WUFDdEJDLFFBQVFDLEdBQUcsQ0FBQyxVQUFVSDtRQUN4QjtRQUNBSSxXQUFXLENBQUNWLE1BQU1NLE9BQU9mO1lBQ3ZCLElBQUksQ0FBQ2UsT0FBTztnQkFDVixNQUFNSyxjQUFjWCxLQUFLWSxPQUFPO2dCQUNoQ1QsaUJBQWlCUTtZQUNuQjtRQUNGO1FBRUFFLFlBQVl2QjtJQUNkO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvX2NvbXBvbmVudHMvZHJvcHpvbmUvYXBpL3VzZUZpbGVVcGxvYWRNdXRhdGlvbi50cz80MDE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgdXNlTXV0YXRpb24sXHJcbn0gZnJvbSBcIkB0YW5zdGFjay9yZWFjdC1xdWVyeVwiO1xyXG5pbXBvcnQgYXhpb3NJbnN0YW5jZSBmcm9tIFwiQC9hcHAvaW50ZXJjZXB0b3IvYXhpb3NJbnN0YW5jZVwiO1xyXG5pbXBvcnQgdXNlU2luZ2xlUGFja2FnZVN0b3JlIGZyb20gXCJAL2FwcC9fc3RvcmVzL3VzZVNpbmdsZVBhY2thZ2VTdG9yZVwiO1xyXG5pbXBvcnQgeyBTaW5nbGVQYWNrYWdlRGF0YSB9IGZyb20gXCJAL2FwcC8ocm91dGVzKS9yZXN1bHRzL1tpZF0vcGFnZVwiO1xyXG5leHBvcnQgdHlwZSBGaWxlVXBsb2FkRFRPID0ge1xyXG4gIGZpbGVzOiBGaWxlW107XHJcbn07XHJcblxyXG5jb25zdCB1cGxvYWRGaWxlID0gYXN5bmMgKGZpbGVzOiBGaWxlW10pID0+IHtcclxuICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gIGZpbGVzLmZvckVhY2goKGZpbGUpID0+IHtcclxuICAgIGZvcm1EYXRhLmFwcGVuZChcImZpbGVzXCIsIGZpbGUpO1xyXG4gIH0pO1xyXG5cclxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zSW5zdGFuY2UucG9zdChcIi91cGxvYWQvZmlsZVwiLCBmb3JtRGF0YSwge1xyXG4gICAgaGVhZGVyczoge1xyXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcIm11bHRpcGFydC9mb3JtLWRhdGFcIixcclxuICAgIH0sXHJcbiAgfSk7XHJcblxyXG4gIGlmICghcmVzcG9uc2UuZGF0YSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgdXBsb2FkaW5nIGZpbGVcIik7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VGaWxlVXBsb2FkTXV0YXRpb24gPSAoKSA9PiB7XHJcbiAgY29uc3Qgc2V0U2luZ2xlUGFja2FnZSA9IHVzZVNpbmdsZVBhY2thZ2VTdG9yZShcclxuICAgIChzdGF0ZSkgPT4gc3RhdGUuc2V0U2luZ2xlUGFja2FnZVxyXG4gICk7XHJcblxyXG5cclxuICByZXR1cm4gdXNlTXV0YXRpb24oe1xyXG4gXHJcbiAgICBvbkVycm9yOiAoZXJyb3IsIGZpbGVzLCByb2xsYmFjaykgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIkVycm9yOlwiLCBlcnJvcik7XHJcbiAgICB9LFxyXG4gICAgb25TZXR0bGVkOiAoZGF0YSwgZXJyb3IsIGZpbGVzKSA9PiB7XHJcbiAgICAgIGlmICghZXJyb3IpIHtcclxuICAgICAgICBjb25zdCBwYWNrYWdlRGF0YSA9IGRhdGEucGFja2FnZSBhcyBTaW5nbGVQYWNrYWdlRGF0YTtcclxuICAgICAgICBzZXRTaW5nbGVQYWNrYWdlKHBhY2thZ2VEYXRhKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBtdXRhdGlvbkZuOiB1cGxvYWRGaWxlLFxyXG4gIH0pO1xyXG59O1xyXG4iXSwibmFtZXMiOlsidXNlTXV0YXRpb24iLCJheGlvc0luc3RhbmNlIiwidXNlU2luZ2xlUGFja2FnZVN0b3JlIiwidXBsb2FkRmlsZSIsImZpbGVzIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImZvckVhY2giLCJmaWxlIiwiYXBwZW5kIiwicmVzcG9uc2UiLCJwb3N0IiwiaGVhZGVycyIsImRhdGEiLCJFcnJvciIsInVzZUZpbGVVcGxvYWRNdXRhdGlvbiIsInNldFNpbmdsZVBhY2thZ2UiLCJzdGF0ZSIsIm9uRXJyb3IiLCJlcnJvciIsInJvbGxiYWNrIiwiY29uc29sZSIsImxvZyIsIm9uU2V0dGxlZCIsInBhY2thZ2VEYXRhIiwicGFja2FnZSIsIm11dGF0aW9uRm4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/_components/dropzone/api/useFileUploadMutation.ts\n"));

/***/ })

});